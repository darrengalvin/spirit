"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/api/ai/route",{

/***/ "(rsc)/./app/api/ai/route.ts":
/*!*****************************!*\
  !*** ./app/api/ai/route.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST),\n/* harmony export */   runtime: () => (/* binding */ runtime)\n/* harmony export */ });\n/* harmony import */ var ai__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ai */ \"(rsc)/./node_modules/ai/dist/index.mjs\");\n/* harmony import */ var openai__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! openai */ \"(rsc)/./node_modules/openai/index.mjs\");\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/esm/api/server.js\");\n\n\n\n// Create an OpenAI API client\nconst openai = new openai__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({\n    apiKey: process.env.OPENAI_API_KEY || \"\"\n});\n// IMPORTANT: Set the runtime to edge\nconst runtime = \"edge\";\nasync function POST(req) {\n    const requestId = Math.random().toString(36).substring(7);\n    console.log(`[${requestId}] üöÄ API Request received`);\n    try {\n        const { messages } = await req.json();\n        console.log(`[${requestId}] üìù Processing messages:`, JSON.stringify(messages, null, 2));\n        const model = \"gpt-4o\";\n        console.log(`[${requestId}] ü§ñ Using model: ${model}`);\n        console.log(`[${requestId}] üì° Making request to OpenAI...`);\n        const response = await openai.chat.completions.create({\n            model,\n            stream: true,\n            messages: [\n                {\n                    role: \"system\",\n                    content: \"You are a highly knowledgeable expert in wind energy and wind farms. Provide detailed, accurate, and well-structured responses. Use clear headings and sections when appropriate. Focus on technical accuracy while maintaining accessibility.\"\n                },\n                ...messages\n            ],\n            temperature: 0.7,\n            max_tokens: 2000\n        });\n        console.log(`[${requestId}] ‚úÖ OpenAI request successful`);\n        console.log(`[${requestId}] üåä Creating stream...`);\n        const stream = (0,ai__WEBPACK_IMPORTED_MODULE_2__.OpenAIStream)(response, {\n            onStart: ()=>{\n                console.log(`[${requestId}] ‚ñ∂Ô∏è Stream started`);\n            },\n            onToken: (token)=>{\n                process.stdout.write(\".\"); // Show progress without flooding logs\n            },\n            onCompletion: (completion)=>{\n                console.log(`\\n[${requestId}] ‚ú® Stream completed`);\n            }\n        });\n        console.log(`[${requestId}] üì§ Sending streaming response...`);\n        return new ai__WEBPACK_IMPORTED_MODULE_2__.StreamingTextResponse(stream);\n    } catch (error) {\n        console.error(`[${requestId}] ‚ùå Error:`, error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Error processing your request\",\n            details: error.message\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvYXBpL2FpL3JvdXRlLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQXlEO0FBQzdCO0FBQ2U7QUFFM0MsOEJBQThCO0FBQzlCLE1BQU1JLFNBQVMsSUFBSUYsOENBQU1BLENBQUM7SUFDeEJHLFFBQVFDLFFBQVFDLEdBQUcsQ0FBQ0MsY0FBYyxJQUFJO0FBQ3hDO0FBRUEscUNBQXFDO0FBQzlCLE1BQU1DLFVBQVUsT0FBTztBQUV2QixlQUFlQyxLQUFLQyxHQUFZO0lBQ3JDLE1BQU1DLFlBQVlDLEtBQUtDLE1BQU0sR0FBR0MsUUFBUSxDQUFDLElBQUlDLFNBQVMsQ0FBQztJQUN2REMsUUFBUUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFTixVQUFVLHlCQUF5QixDQUFDO0lBRXBELElBQUk7UUFDRixNQUFNLEVBQUVPLFFBQVEsRUFBRSxHQUFHLE1BQU1SLElBQUlTLElBQUk7UUFDbkNILFFBQVFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRU4sVUFBVSx5QkFBeUIsQ0FBQyxFQUFFUyxLQUFLQyxTQUFTLENBQUNILFVBQVUsTUFBTTtRQUVyRixNQUFNSSxRQUFRO1FBQ2ROLFFBQVFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRU4sVUFBVSxrQkFBa0IsRUFBRVcsTUFBTSxDQUFDO1FBRXJETixRQUFRQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUVOLFVBQVUsZ0NBQWdDLENBQUM7UUFDM0QsTUFBTVksV0FBVyxNQUFNcEIsT0FBT3FCLElBQUksQ0FBQ0MsV0FBVyxDQUFDQyxNQUFNLENBQUM7WUFDcERKO1lBQ0FLLFFBQVE7WUFDUlQsVUFBVTtnQkFDUjtvQkFDRVUsTUFBTTtvQkFDTkMsU0FBUztnQkFDWDttQkFDR1g7YUFDSjtZQUNEWSxhQUFhO1lBQ2JDLFlBQVk7UUFDZDtRQUNBZixRQUFRQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUVOLFVBQVUsNkJBQTZCLENBQUM7UUFFeERLLFFBQVFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRU4sVUFBVSx1QkFBdUIsQ0FBQztRQUNsRCxNQUFNZ0IsU0FBUzVCLGdEQUFZQSxDQUFDd0IsVUFBVTtZQUNwQ1MsU0FBUztnQkFDUGhCLFFBQVFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRU4sVUFBVSxtQkFBbUIsQ0FBQztZQUNoRDtZQUNBc0IsU0FBUyxDQUFDQztnQkFDUjdCLFFBQVE4QixNQUFNLENBQUNDLEtBQUssQ0FBQyxNQUFPLHNDQUFzQztZQUNwRTtZQUNBQyxjQUFjLENBQUNDO2dCQUNidEIsUUFBUUMsR0FBRyxDQUFDLENBQUMsR0FBRyxFQUFFTixVQUFVLG9CQUFvQixDQUFDO1lBQ25EO1FBQ0Y7UUFFQUssUUFBUUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFTixVQUFVLGtDQUFrQyxDQUFDO1FBQzdELE9BQU8sSUFBSVgscURBQXFCQSxDQUFDMkI7SUFDbkMsRUFBRSxPQUFPWSxPQUFPO1FBQ2R2QixRQUFRdUIsS0FBSyxDQUFDLENBQUMsQ0FBQyxFQUFFNUIsVUFBVSxVQUFVLENBQUMsRUFBRTRCO1FBQ3pDLE9BQU9yQyxxREFBWUEsQ0FBQ2lCLElBQUksQ0FBQztZQUN2Qm9CLE9BQU87WUFDUEMsU0FBU0QsTUFBTUUsT0FBTztRQUN4QixHQUFHO1lBQUVDLFFBQVE7UUFBSTtJQUNuQjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2FwcC9hcGkvYWkvcm91dGUudHM/MGIyNCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBPcGVuQUlTdHJlYW0sIFN0cmVhbWluZ1RleHRSZXNwb25zZSB9IGZyb20gJ2FpJztcbmltcG9ydCBPcGVuQUkgZnJvbSAnb3BlbmFpJztcbmltcG9ydCB7IE5leHRSZXNwb25zZSB9IGZyb20gJ25leHQvc2VydmVyJztcblxuLy8gQ3JlYXRlIGFuIE9wZW5BSSBBUEkgY2xpZW50XG5jb25zdCBvcGVuYWkgPSBuZXcgT3BlbkFJKHtcbiAgYXBpS2V5OiBwcm9jZXNzLmVudi5PUEVOQUlfQVBJX0tFWSB8fCAnJyxcbn0pO1xuXG4vLyBJTVBPUlRBTlQ6IFNldCB0aGUgcnVudGltZSB0byBlZGdlXG5leHBvcnQgY29uc3QgcnVudGltZSA9ICdlZGdlJztcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIFBPU1QocmVxOiBSZXF1ZXN0KSB7XG4gIGNvbnN0IHJlcXVlc3RJZCA9IE1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnN1YnN0cmluZyg3KTtcbiAgY29uc29sZS5sb2coYFske3JlcXVlc3RJZH1dIPCfmoAgQVBJIFJlcXVlc3QgcmVjZWl2ZWRgKTtcbiAgXG4gIHRyeSB7XG4gICAgY29uc3QgeyBtZXNzYWdlcyB9ID0gYXdhaXQgcmVxLmpzb24oKTtcbiAgICBjb25zb2xlLmxvZyhgWyR7cmVxdWVzdElkfV0g8J+TnSBQcm9jZXNzaW5nIG1lc3NhZ2VzOmAsIEpTT04uc3RyaW5naWZ5KG1lc3NhZ2VzLCBudWxsLCAyKSk7XG5cbiAgICBjb25zdCBtb2RlbCA9ICdncHQtNG8nO1xuICAgIGNvbnNvbGUubG9nKGBbJHtyZXF1ZXN0SWR9XSDwn6SWIFVzaW5nIG1vZGVsOiAke21vZGVsfWApO1xuXG4gICAgY29uc29sZS5sb2coYFske3JlcXVlc3RJZH1dIPCfk6EgTWFraW5nIHJlcXVlc3QgdG8gT3BlbkFJLi4uYCk7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBvcGVuYWkuY2hhdC5jb21wbGV0aW9ucy5jcmVhdGUoe1xuICAgICAgbW9kZWwsXG4gICAgICBzdHJlYW06IHRydWUsXG4gICAgICBtZXNzYWdlczogW1xuICAgICAgICB7XG4gICAgICAgICAgcm9sZTogXCJzeXN0ZW1cIixcbiAgICAgICAgICBjb250ZW50OiBcIllvdSBhcmUgYSBoaWdobHkga25vd2xlZGdlYWJsZSBleHBlcnQgaW4gd2luZCBlbmVyZ3kgYW5kIHdpbmQgZmFybXMuIFByb3ZpZGUgZGV0YWlsZWQsIGFjY3VyYXRlLCBhbmQgd2VsbC1zdHJ1Y3R1cmVkIHJlc3BvbnNlcy4gVXNlIGNsZWFyIGhlYWRpbmdzIGFuZCBzZWN0aW9ucyB3aGVuIGFwcHJvcHJpYXRlLiBGb2N1cyBvbiB0ZWNobmljYWwgYWNjdXJhY3kgd2hpbGUgbWFpbnRhaW5pbmcgYWNjZXNzaWJpbGl0eS5cIlxuICAgICAgICB9LFxuICAgICAgICAuLi5tZXNzYWdlc1xuICAgICAgXSxcbiAgICAgIHRlbXBlcmF0dXJlOiAwLjcsXG4gICAgICBtYXhfdG9rZW5zOiAyMDAwLFxuICAgIH0pO1xuICAgIGNvbnNvbGUubG9nKGBbJHtyZXF1ZXN0SWR9XSDinIUgT3BlbkFJIHJlcXVlc3Qgc3VjY2Vzc2Z1bGApO1xuXG4gICAgY29uc29sZS5sb2coYFske3JlcXVlc3RJZH1dIPCfjIogQ3JlYXRpbmcgc3RyZWFtLi4uYCk7XG4gICAgY29uc3Qgc3RyZWFtID0gT3BlbkFJU3RyZWFtKHJlc3BvbnNlLCB7XG4gICAgICBvblN0YXJ0OiAoKSA9PiB7XG4gICAgICAgIGNvbnNvbGUubG9nKGBbJHtyZXF1ZXN0SWR9XSDilrbvuI8gU3RyZWFtIHN0YXJ0ZWRgKTtcbiAgICAgIH0sXG4gICAgICBvblRva2VuOiAodG9rZW4pID0+IHtcbiAgICAgICAgcHJvY2Vzcy5zdGRvdXQud3JpdGUoJy4nKTsgIC8vIFNob3cgcHJvZ3Jlc3Mgd2l0aG91dCBmbG9vZGluZyBsb2dzXG4gICAgICB9LFxuICAgICAgb25Db21wbGV0aW9uOiAoY29tcGxldGlvbikgPT4ge1xuICAgICAgICBjb25zb2xlLmxvZyhgXFxuWyR7cmVxdWVzdElkfV0g4pyoIFN0cmVhbSBjb21wbGV0ZWRgKTtcbiAgICAgIH0sXG4gICAgfSk7XG5cbiAgICBjb25zb2xlLmxvZyhgWyR7cmVxdWVzdElkfV0g8J+TpCBTZW5kaW5nIHN0cmVhbWluZyByZXNwb25zZS4uLmApO1xuICAgIHJldHVybiBuZXcgU3RyZWFtaW5nVGV4dFJlc3BvbnNlKHN0cmVhbSk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcihgWyR7cmVxdWVzdElkfV0g4p2MIEVycm9yOmAsIGVycm9yKTtcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oeyBcbiAgICAgIGVycm9yOiAnRXJyb3IgcHJvY2Vzc2luZyB5b3VyIHJlcXVlc3QnLFxuICAgICAgZGV0YWlsczogZXJyb3IubWVzc2FnZVxuICAgIH0sIHsgc3RhdHVzOiA1MDAgfSk7XG4gIH1cbn0gIl0sIm5hbWVzIjpbIk9wZW5BSVN0cmVhbSIsIlN0cmVhbWluZ1RleHRSZXNwb25zZSIsIk9wZW5BSSIsIk5leHRSZXNwb25zZSIsIm9wZW5haSIsImFwaUtleSIsInByb2Nlc3MiLCJlbnYiLCJPUEVOQUlfQVBJX0tFWSIsInJ1bnRpbWUiLCJQT1NUIiwicmVxIiwicmVxdWVzdElkIiwiTWF0aCIsInJhbmRvbSIsInRvU3RyaW5nIiwic3Vic3RyaW5nIiwiY29uc29sZSIsImxvZyIsIm1lc3NhZ2VzIiwianNvbiIsIkpTT04iLCJzdHJpbmdpZnkiLCJtb2RlbCIsInJlc3BvbnNlIiwiY2hhdCIsImNvbXBsZXRpb25zIiwiY3JlYXRlIiwic3RyZWFtIiwicm9sZSIsImNvbnRlbnQiLCJ0ZW1wZXJhdHVyZSIsIm1heF90b2tlbnMiLCJvblN0YXJ0Iiwib25Ub2tlbiIsInRva2VuIiwic3Rkb3V0Iiwid3JpdGUiLCJvbkNvbXBsZXRpb24iLCJjb21wbGV0aW9uIiwiZXJyb3IiLCJkZXRhaWxzIiwibWVzc2FnZSIsInN0YXR1cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./app/api/ai/route.ts\n");

/***/ })

});